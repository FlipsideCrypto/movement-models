version: 2

models:
  - name: silver__nft_mints_v1
    description: NFT mints for v1 token standard using MintTokenEvent and DepositEvent
    config:
      contract:
        enforced: true
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - tx_hash
            - event_index
          tags: ['test_quality']
    columns:
      - name: block_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp of the block
        tests:
          - not_null:
              tags: ['test_quality']
      - name: block_number
        data_type: NUMBER
        description: Block number of the transaction
        tests:
          - not_null:
              tags: ['test_quality']
      - name: version
        data_type: NUMBER
        description: Transaction version number
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: tx_hash
        data_type: VARCHAR
        description: Transaction hash
        tests:
          - not_null:
              tags: ['test_quality']
      - name: event_index
        data_type: NUMBER
        description: Index of the event within the transaction
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: event_type
        data_type: VARCHAR
        description: Type of the mint event
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_address
        data_type: VARCHAR
        description: NFT token address
        tests:
          - not_null:
              tags: ['test_quality']
      - name: project_name
        data_type: VARCHAR
        description: Name of the NFT project/collection
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_from_address
        data_type: VARCHAR
        description: Address that minted the NFT (contract address)
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_to_address
        data_type: VARCHAR
        description: Address that received the minted NFT
        tests:
          - not_null:
              tags: ['test_quality']
      - name: tokenid
        data_type: VARCHAR
        description: Token ID of the minted NFT
        tests:
          - not_null:
              tags: ['test_quality']
      - name: token_version
        data_type: VARCHAR
        description: Token standard version (v1)
        tests:
          - not_null:
              tags: ['test_quality']
          - accepted_values:
              values: ['v1']
              tags: ['test_quality']
      - name: nft_count
        data_type: NUMBER
        description: Number of NFTs minted
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: "> 0"
              tags: ['test_quality']
      - name: price_raw
        data_type: NUMBER
        description: Raw price paid for minting
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: nft_mints_v1_id
        data_type: VARCHAR
        description: Unique identifier for the v1 mint record
        tests:
          - unique:
              tags: ['test_quality']
          - not_null:
              tags: ['test_quality']
      - name: inserted_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was inserted
        tests:
          - not_null:
              tags: ['test_quality']
      - name: modified_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was last modified
        tests:
          - not_null:
              tags: ['test_quality']
      - name: _invocation_id
        data_type: VARCHAR
        description: DBT invocation identifier

  - name: silver__nft_mints_v2
    description: NFT mints for v2 token standard using MintTokenEvent and DepositEvent
    config:
      contract:
        enforced: true
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - tx_hash
            - event_index
          tags: ['test_quality']
    columns:
      - name: block_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp of the block
        tests:
          - not_null:
              tags: ['test_quality']
      - name: block_number
        data_type: NUMBER
        description: Block number of the transaction
        tests:
          - not_null:
              tags: ['test_quality']
      - name: version
        data_type: NUMBER
        description: Transaction version number
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: tx_hash
        data_type: VARCHAR
        description: Transaction hash
        tests:
          - not_null:
              tags: ['test_quality']
      - name: event_index
        data_type: NUMBER
        description: Index of the event within the transaction
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: event_type
        data_type: VARCHAR
        description: Type of the mint event
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_address
        data_type: VARCHAR
        description: NFT token address
        tests:
          - not_null:
              tags: ['test_quality']
      - name: project_name
        data_type: VARCHAR
        description: Name of the NFT project/collection
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_from_address
        data_type: VARCHAR
        description: Address that minted the NFT (contract address)
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_to_address
        data_type: VARCHAR
        description: Address that received the minted NFT
        tests:
          - not_null:
              tags: ['test_quality']
      - name: tokenid
        data_type: VARCHAR
        description: Token ID of the minted NFT
        tests:
          - not_null:
              tags: ['test_quality']
      - name: token_version
        data_type: VARCHAR
        description: Token standard version (v2)
        tests:
          - not_null:
              tags: ['test_quality']
          - accepted_values:
              values: ['v2']
              tags: ['test_quality']
      - name: nft_count
        data_type: NUMBER
        description: Number of NFTs minted
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: "> 0"
              tags: ['test_quality']
      - name: price_raw
        data_type: NUMBER
        description: Raw price paid for minting
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: nft_mints_v2_id
        data_type: VARCHAR
        description: Unique identifier for the v2 mint record
        tests:
          - unique:
              tags: ['test_quality']
          - not_null:
              tags: ['test_quality']
      - name: inserted_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was inserted
        tests:
          - not_null:
              tags: ['test_quality']
      - name: modified_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was last modified
        tests:
          - not_null:
              tags: ['test_quality']
      - name: _invocation_id
        data_type: VARCHAR
        description: DBT invocation identifier

  - name: silver__nft_mints_combined
    description: Combined NFT mints from both v1 and v2 standards with currency address information
    config:
      contract:
        enforced: true
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - tx_hash
            - event_index
          tags: ['test_quality']
    columns:
      - name: block_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp of the block
        tests:
          - not_null:
              tags: ['test_quality']
      - name: block_number
        data_type: NUMBER
        description: Block number of the transaction
        tests:
          - not_null:
              tags: ['test_quality']
      - name: version
        data_type: NUMBER
        description: Transaction version number
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: tx_hash
        data_type: VARCHAR
        description: Transaction hash
        tests:
          - not_null:
              tags: ['test_quality']
      - name: event_index
        data_type: NUMBER
        description: Index of the event within the transaction
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: event_type
        data_type: VARCHAR
        description: Type of the mint event
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_address
        data_type: VARCHAR
        description: NFT token address
        tests:
          - not_null:
              tags: ['test_quality']
      - name: project_name
        data_type: VARCHAR
        description: Name of the NFT project/collection
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_from_address
        data_type: VARCHAR
        description: Address that minted the NFT (contract address)
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_to_address
        data_type: VARCHAR
        description: Address that received the minted NFT
        tests:
          - not_null:
              tags: ['test_quality']
      - name: tokenid
        data_type: VARCHAR
        description: Token ID of the minted NFT
        tests:
          - not_null:
              tags: ['test_quality']
      - name: token_version
        data_type: VARCHAR
        description: Token standard version (v1 or v2)
        tests:
          - not_null:
              tags: ['test_quality']
          - accepted_values:
              values: ['v1', 'v2']
              tags: ['test_quality']
      - name: nft_count
        data_type: NUMBER
        description: Number of NFTs minted
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: "> 0"
              tags: ['test_quality']
      - name: total_price_raw
        data_type: NUMBER
        description: Total raw price paid for minting
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: currency_address
        data_type: VARCHAR
        description: Address of the currency/token used for payment
      - name: nft_mints_combined_id
        data_type: VARCHAR
        description: Unique identifier for the combined mint record
        tests:
          - unique:
              tags: ['test_quality']
          - not_null:
              tags: ['test_quality']
      - name: inserted_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was inserted
        tests:
          - not_null:
              tags: ['test_quality']
      - name: modified_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was last modified
        tests:
          - not_null:
              tags: ['test_quality']
      - name: _invocation_id
        data_type: VARCHAR
        description: DBT invocation identifier

  - name: silver__nft_sales_tradeport
    description: NFT sales events from the Tradeport marketplace platform
    config:
      contract:
        enforced: true
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - tx_hash
            - event_index
          tags: ['test_quality']
    columns:
      - name: block_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp of the block
        tests:
          - not_null:
              tags: ['test_quality']
      - name: block_number
        data_type: NUMBER
        description: Block number of the transaction
        tests:
          - not_null:
              tags: ['test_quality']
      - name: version
        data_type: NUMBER
        description: Transaction version number
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: tx_hash
        data_type: VARCHAR
        description: Transaction hash
        tests:
          - not_null:
              tags: ['test_quality']
      - name: event_index
        data_type: NUMBER
        description: Index of the event within the transaction
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              tags: ['test_quality']
      - name: event_type
        data_type: VARCHAR
        description: Type of sale event (sale, bid_won)
        tests:
          - not_null:
              tags: ['test_quality']
          - accepted_values:
              values: ['sale', 'bid_won']
              tags: ['test_quality']
      - name: buyer_address
        data_type: VARCHAR
        description: Address of the NFT buyer
        tests:
          - not_null:
              tags: ['test_quality']
      - name: seller_address
        data_type: VARCHAR
        description: Address of the NFT seller
        tests:
          - not_null:
              tags: ['test_quality']
      - name: nft_address
        data_type: VARCHAR
        description: NFT token address
        tests:
          - not_null:
              tags: ['test_quality']
      - name: project_name
        data_type: VARCHAR
        description: Name of the NFT project/collection
      - name: token_version
        data_type: VARCHAR
        description: Token standard version (v2)
        tests:
          - not_null:
              tags: ['test_quality']
          - accepted_values:
              values: ['v2']
              tags: ['test_quality']
      - name: platform_address
        data_type: VARCHAR
        description: Address of the marketplace platform
        tests:
          - not_null:
              tags: ['test_quality']
      - name: platform_name
        data_type: VARCHAR
        description: Name of the marketplace platform
        tests:
          - not_null:
              tags: ['test_quality']
          - accepted_values:
              values: ['Tradeport']
              tags: ['test_quality']
      - name: platform_exchange_version
        data_type: VARCHAR
        description: Version of the marketplace exchange
        tests:
          - not_null:
              tags: ['test_quality']
      - name: total_price_raw
        data_type: NUMBER
        description: Total raw price of the sale
        tests:
          - not_null:
              tags: ['test_quality']
          - dbt_utils.expression_is_true:
              expression: "> 0"
              tags: ['test_quality']
      - name: nft_sales_tradeport_id
        data_type: VARCHAR
        description: Unique identifier for the Tradeport sale record
        tests:
          - unique:
              tags: ['test_quality']
          - not_null:
              tags: ['test_quality']
      - name: inserted_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was inserted
        tests:
          - not_null:
              tags: ['test_quality']
      - name: modified_timestamp
        data_type: TIMESTAMP_NTZ
        description: Timestamp when the record was last modified
        tests:
          - not_null:
              tags: ['test_quality']
      - name: _invocation_id
        data_type: VARCHAR
        description: DBT invocation identifier
